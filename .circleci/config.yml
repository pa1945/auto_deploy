---

version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.2.1

jobs:
  aws-cli-example:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: example
      - run: echo "*** Run your code here  ***"

      - run:
          name: Check aws cli version
          command: |
            aws --version

  hello-world-udapeople:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Say Hello to Udapeople
          command: |
            echo "Udapeople: Hello World"
      - run:
          name: Check aws cli version
          command: |
            aws --version


  lint-frontend:
    docker:
      # - image: amazon/aws-cli
      # - image: circleci/node:10.0.0
      - image: circleci/node:10.21.0
    steps:
      - checkout
      - run:
          name: cd folder/dir frontend, ls -las
          command: |
            cd frontend && ls -als
      - run:
          name: List folder/dir where we are
          command: |
            ls -las
      - run:
          name: cd frontend, install 'npm i' and run lint
          command: |
            cd frontend; npm install ; npm run lint

  lint-backend:
    docker:
      # - image: circleci/node:10.0.0
      # - image: amazon/aws-cli
      - image: circleci/node:10.21.0
    steps:
      - checkout
      - run:
          name: cd folder/dir backend, ls -las
          command: |
            cd backend && ls -als
      - run:
          name: List folder/dir where we are
          command: |
            ls -las
      - run:
          name: cd backend, install 'npm i' and run lint
          command: |
            cd backend; npm install ; npm run lint

  run-frontend:
    docker:
      # - image: amazon/aws-cli
      # - image: circleci/node:10.0.0
      - image: circleci/node:10.21.0
    steps:
      - checkout
      - run:
          name: cd folder/dir frontend, ls -las
          command: |
            cd frontend && ls -als
            npm -v && sudo npm install npm -g && npm -v

      - run:
          name: List folder/dir where we are
          command: |
            ls -las
      - run:
          name: cd frontend, install 'npm i'
          command: |
            cd frontend; npm install
      - run:
          name: cd frontend,  and run 'npm audit'
          command: |
            cd frontend; npm audit

      # Or, cd frontend; npm audit --audit-level=critical
      - run:
          name: cd frontend, and run 'npm start'
          command: |
            cd frontend; npm run start

  run-backend:
    docker:
      # - image: amazon/aws-cli
      # - image: circleci/node:10.0.0
      - image: circleci/node:10.21.0
    steps:
      - checkout
      - run:
          name: cd folder/dir backend, ls -las
          command: |
            cd backend && ls -als
            npm -v && sudo npm install npm -g && npm -v

      - run:
          name: List folder/dir where we are
          command: |
            ls -las
      - run:
          name: cd backend, install 'npm i'
          command: |
            cd backend; npm install
      - run:
          name: cd backend,  run 'npm audit'
          command: |
            cd backend; npm audit

      # cd backend; npm audit --audit-level=critical
      - run:
          name: cd backend, run 'npm start'
          command: |
            cd backend;  npm run start

  run-s3:
    docker:
      - image: amazon/aws-cli
      # - image: circleci/node:10.21.0
    steps:
      - checkout
      - run:
          name: Check aws cli version
          command: |
            aws --version
      - run:
          name: Install awscli
          command: |
            # sudo apt update
            # sudo apt upgrade
            # sudo apt install python3-pip
            # pip3 install awscli --upgrade --user
            aws --version

      - run:
          name: Run aws cloudformation and create stack/s3-bucket
          command: |
            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID2
            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY2
            aws cloudformation deploy \
            --template-file .circleci/files/frontend.yml \
            --stack-name project-udapeople --parameter-overrides \
            ID=s3-udapeopleX

  run-ec2:
    docker:
      - image: amazon/aws-cli
      # - image: circleci/node:10.21.0
    steps:
      - checkout
      - run:
          name: Install awscli
          command: |
            sudo apt update
            sudo apt upgrade
            sudo apt install python3-pip
            pip3 install awscli --upgrade --user
            aws --version

      - run:
          name: Run aws cloudformation and create ec2 instance
          command: |
            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID2
            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY2
            aws cloudformation deploy \
            --template-file .circleci/files/frontend.yml \
            --stack-name project-udapeople --parameter-overrides \
            ID=s3-udapeople


workflows:
  version: 2
  default:
    jobs:
      # - lint-frontend
      # - lint-backend
      # - run-frontend
      # - run-backend
      - run-s3
      # - run-ec2
      - hello-world-udapeople

  aws-cli:
    jobs:
      - aws-cli-example
      #- aws-cli-example:
      #    context: aws
